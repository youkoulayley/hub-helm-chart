suite: Hub deployment
templates:
  - deployment-tunnel.yaml
tests:
  - it: should have 1 replicas
    set:
      token: "test"
    asserts:
      - equal:
          path: spec.replicas
          value: 1
  - it: should change image when image.tag is specified
    set:
      image:
        name: ghcr.io/traefik/hub-agent-kubernetes
        tag:
          alpha2.0
      token: "test"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/traefik/hub-agent-kubernetes:alpha2.0
  - it: should change the pullPolicy if specified
    set:
      image:
        pullPolicy:
          Always
      token: "test"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always
  - it: should have an image when image.name is specified
    set:
      image:
        name: ghcr.io/traefik/hub-agent-kubernetes
        tag: experimental
      token: "test"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/traefik/hub-agent-kubernetes:experimental
  - it: should have annotations and/or podsAnnotations when specified
    set:
      tunnelDeployment:
        annotations:
          hub/plop: annotations
        podAnnotations:
          hub/plop: podAnnotations
      token: "test"
    asserts:
      - equal:
          path: metadata.annotations.hub/plop
          value: annotations
      - equal:
          path: spec.template.metadata.annotations.hub/plop
          value: podAnnotations
  - it: should have specific label when specified
    set:
      tunnelDeployment:
        podLabels:
          custom-label: plop
      token: "test"
    asserts:
      - equal:
          path: spec.template.metadata.labels.custom-label
          value: plop
  - it: should set token env var when secretRef set
    set:
      tokenSecretRef:
        name: hub-token
        key: token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HUB_SECRET_TOKEN
            valueFrom:
              secretKeyRef:
                name: hub-token
                key: token
  - it: should set args when secretRef set
    set:
      tokenSecretRef:
        name: hub-token
        key: token
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: --token=$(HUB_SECRET_TOKEN)
  - it: should set token when set
    set:
      token: "test"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: --token=test
  - it: should ignore token when secretRef set
    set:
      token: "test"
      tokenSecretRef:
        name: hub-token
        key: token
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: --token=$(HUB_SECRET_TOKEN)
  - it: should set args for tunnel
    set:
      token: test
      tunnelDeployment:
        args:
        - --log-level=debug
        - --platform-url=https://hub.traefik.io/agent
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[4]
          value: --log-level=debug
      - equal:
          path: spec.template.spec.containers[0].args[5]
          value: --platform-url=https://hub.traefik.io/agent
  - it: should provide a restrictive securityContext by default
    set:
      token: "test"
    asserts:
      - isNotEmpty:
          path: spec.template.spec.containers[0].securityContext
  - it: it should have a RollingUpdate Strategy
    set:
      token: "test"
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 1
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 0
